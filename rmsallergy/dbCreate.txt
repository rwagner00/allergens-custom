#
# create database and user authorized to use the database
#

CREATE DATABASE IF NOT EXISTS rmsallergy;

GRANT ALL PRIVILEGES ON rmsallergy.*
TO 'rmsuser'@'localhost' IDENTIFIED BY 'Password1'
WITH GRANT OPTION;

#
# create tables
#

USE rmsallergy;

#DROP TABLE practice;
CREATE TABLE IF NOT EXISTS practice (
  practice_key INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  practice_name TEXT,
  practice_specialty INT NOT NULL,
  practice_admin_poc_name TEXT,
  practice_admin_poc_email TEXT,
  practice_clinical_poc_name TEXT,
  practice_clinical_poc_email TEXT,
  practice_address1 TEXT,
  practice_address2 TEXT,
  practice_city TEXT,
  practice_state TEXT,
  practice_zip TEXT,
  practice_home_phone TEXT,
  practice_work_phone TEXT,
  practice_mobile_phone TEXT,
  practice_email TEXT,
  practice_fax TEXT
);

#DROP TABLE testctr;
CREATE TABLE IF NOT EXISTS testctr (
  testctr_key INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  practice_key INT,
  testctr_name TEXT,
  testctr_poc_name TEXT,
  testctr_address1 TEXT,
  testctr_address2 TEXT,
  testctr_city TEXT,
  testctr_state TEXT,
  testctr_zip TEXT,
  testctr_home_phone TEXT,
  testctr_work_phone TEXT,
  testctr_mobile_phone TEXT,
  testctr_email TEXT,
  testctr_fax TEXT,
  FOREIGN KEY (practice_key) REFERENCES practice(practice_key)
);

#DROP TABLE physician;
CREATE TABLE IF NOT EXISTS physician (
  physician_key INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  practice_key INT NOT NULL,
  physician_name TEXT,
  physician_address1 TEXT,
  physician_address2 TEXT,
  physician_city TEXT,
  physician_state TEXT,
  physician_zip TEXT,
  physician_home_phone TEXT,
  physician_work_phone TEXT,
  physician_mobile_phone TEXT,
  physician_email TEXT,
  physician_fax TEXT,
  FOREIGN KEY (practice_key) REFERENCES practice(practice_key)
);

#DROP TABLE patient;
CREATE TABLE IF NOT EXISTS patient (
  patient_key INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  practice_key INT NOT NULL,
  patient_first_name TEXT,
  patient_middle_name TEXT,
  patient_last_name TEXT,
  patient_ssn1 VARCHAR(3),
  patient_ssn2 VARCHAR(2),
  patient_ssn3 VARCHAR(4),
  patient_dob_month INT,
  patient_dob_day INT,
  patient_dob_year INT,
  patient_gender TEXT,
  patient_address1 TEXT,
  patient_address2 TEXT,
  patient_city TEXT,
  patient_state TEXT,
  patient_zip TEXT,
  patient_home_phone TEXT,
  patient_work_phone TEXT,
  patient_mobile_phone TEXT,
  patient_email TEXT,
  patient_fax TEXT,
  minor_flag BOOLEAN,
  guardian_name TEXT,
  guardian_address1 TEXT,
  guardian_address2 TEXT,
  guardian_city TEXT,
  guardian_state TEXT,
  guardian_zip TEXT,
  guardian_home_phone TEXT,
  guardian_work_phone TEXT,
  guardian_mobile_phone TEXT,
  guardian_email TEXT,
  guardian_fax TEXT,
  FOREIGN KEY (practice_key) REFERENCES practice(practice_key)
);


#DROP TABLE referral;
CREATE TABLE IF NOT EXISTS referral (
  referral_key INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  practice_key INT NOT NULL,
  patient_key INT NOT NULL,
  profile_key INT NOT NULL,
  referred_practice_key INT,
  status_id INT,
  referral_notes TEXT,
  chart_blob BLOB,
  cash_pay_flag BOOLEAN,
  primary_flag BOOLEAN,
  primary_carrier TEXT,
  primary_group_number TEXT,
  primary_policy_holder_name TEXT,
  primary_policy_holder_ssn1 VARCHAR(3),
  primary_policy_holder_ssn2 VARCHAR(2),
  primary_policy_holder_ssn3 VARCHAR(4),
  primary_policy_holder_dob_month INT,
  primary_policy_holder_dob_day INT,
  primary_policy_holder_dob_year INT,
  primary_policy_holder_blob BLOB,
  secondary_flag BOOLEAN,
  secondary_carrier TEXT,
  secondary_group_number TEXT,
  secondary_policy_holder_name TEXT,
  secondary_policy_holder_ssn1 VARCHAR(3),
  secondary_policy_holder_ssn2 VARCHAR(2),
  secondary_policy_holder_ssn3 VARCHAR(4),
  secondary_policy_holder_dob_month INT,
  secondary_policy_holder_dob_day INT,
  secondary_policy_holder_dob_year INT,
  secondary_policy_holder_blob BLOB,
  FOREIGN KEY (practice_key) REFERENCES practice(practice_key),
  FOREIGN KEY (patient_key) REFERENCES patient(patient_key),
  FOREIGN KEY (referred_practice_key) REFERENCES practice(practice_key),
  FOREIGN KEY (profile_key) REFERENCES profile(profile_key)
);

#DROP TABLE profile;
CREATE TABLE IF NOT EXISTS profile (
  profile_key INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  practice_key INT NOT NULL,
  patient_key INT NOT NULL,
  test_date_month INT,
  test_date_day INT,
  test_date_year INT,
  cat_pelt TEXT,
  cat_hair TEXT,
  dog_hair TEXT,
  cockroach TEXT,
  mite_farinae TEXT,
  curvularia TEXT,
  epidermophyton TEXT,
  fusarium TEXT,
  helminthosporium TEXT,
  hormodendrum TEXT,
  mite_petronyssi TEXT,
  feathers_mix TEXT,
  ap_house_dust TEXT,
  pcn_mix TEXT,
  horse_hair TEXT,
  mucor TEXT,
  pullularia TEXT,
  rhizopus TEXT,
  stemphylium_botrysum TEXT,
  trichphyton_mix TEXT,
  lambs_quarter TEXT,
  palintain TEXT,
  ragweed_mix_gs TEXT,
  marchelder TEXT,
  dog_fennel TEXT,
  elm_american TEXT,
  oak_mix TEXT,
  pecan_tree TEXT,
  sweet_gum TEXT,
  walnut_black TEXT,
  alternariatenuis TEXT,
  aspergillus_fumigatus TEXT,
  botrytis_cinerea TEXT,
  candida TEXT,
  cephalosporium TEXT,
  pine_mix TEXT,
  sycamore_american TEXT,
  careless_pigweed TEXT,
  cocklebur TEXT,
  dock_sorrel TEXT,
  bluegrass_kentucky TEXT,
  corn_cultivated TEXT,
  oats_common TEXT,
  orchard_grass TEXT,
  redtop TEXT,
  positive_histamine TEXT,
  negative_glycerine TEXT,
  phenol TEXT,
  bahia_grass TEXT,
  johnson_grass TEXT,
  sweet_vernalgrass TEXT,
  boxelder_maple TEXT,
  cedar_mountian TEXT,
  common_privet TEXT,
  cottonwood TEXT,
  bermuda_grass TEXT,
  meadow_fescue TEXT,
  rye_grass TEXT,
  timothy TEXT,
  brome_smooth TEXT,
  casein TEXT,
  milk_cow TEXT,
  egg_chicken_white TEXT,
  peanut TEXT,
  soybean TEXT,
  pecan TEXT,
  shellfish_mix TEXT,
  shrimp TEXT,
  notes TEXT,
  FOREIGN KEY (practice_key) REFERENCES practice(practice_key),
  FOREIGN KEY (patient_key) REFERENCES patient(patient_key)
);
