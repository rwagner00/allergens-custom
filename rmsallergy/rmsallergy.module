<?php
/**
 * Display help and module information
 *
 * @param path
 *   Which path of the site we're using to display help
 * @param arg
 *   Array that holds the current path as returned from arg() function
 */
function rmsallergy_help($path, $arg) {
  switch ($path) {
    case 'admin/help#rmsallergy':
      $output = '';
      $output .= '<h3>'.t('About').'</h3>';
      $output .= '<p>'. t("A helpful entry about your module").'</p>';
      return $output;
  }
}

/**
 * Implements hook_block_info ()
 */
function rmsallergy_block_info () {
  $blocks['rmsallergy'] = array(
    'info' => t("RMS Allergy"), // The name that will appear in the block list
    'cache' => DRUPAL_CACHE_PER_ROLE // Default
  );
  return $blocks;
}

/**
 * custom content function - not a hook
 */
function rmsallergy_contents ( $display ) {
  $today = getdate ();
  $start_time = mktime(0,0,0,$today['mon'],($today['mday']-7),$today['year']);
  $end_time = time();

  $max_num = variable_get('rmsallergy_max', 3);

  $query = db_select ( 'node', 'n' )
    ->fields('n', array('nid', 'title', 'created'))
    ->condition('status',1) //Published
    ->condition('created', array($start_time, $end_time), 'BETWEEN')
    ->orderBy('created','DESC');

  if ( $display == 'block' ) {
    $query->range(0, $max_num);
  }

  return $query->execute();
}

function rmsallergy_block_view ($delta='') {
  switch($delta) {
    case 'rmsallergy':
      $block['subject'] = t('RMS Allergy');
      if(user_access('access content')) {
        $result = rmsallergy_contents ('block');
        $items = array ();
        foreach ( $result as $node ) {
          $items[] = array('data' => l($node->title, 'node/'.$node->nid));
        }
        if (empty($items)) {
          $block['content'] = t('No posts available.');
        } else {
          $block['content'] = theme ('item_list', array('items' => $items ));
        }
      }
  }
  return $block;
}


function rmsallergy_menu () {

  $items = array();

/*
  $items['admin/config/content/rmsallergy'] = array(
    'title' => 'RMS Allergy',
    'description' => 'Configuration for RMS Allergy module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rmsallergy_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM
  );
*/

  $items['rmsadmin'] = array (
    'title' => 'Administration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rmsallergy_administration_form'),
    'access arguments' => array('access rmsadmin content'),
    'description' => 'RMS Allergy Application Administration',
    'file' => 'rmsallergy_rmsadmin.inc',
    'type' => MENU_NORMAL_ITEM
  );

  $items['rmsadmin/practicekeys'] = array (
    'title' => 'Practice Keys',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rmsallergy_view_practice_keys'),
    'access arguments' => array('access rmsadmin content'),
    'description' => 'Practice Keys',
    'file' => 'rmsallergy_view_practice_keys.inc',
    'type' => MENU_NORMAL_ITEM
  );

  $items['rmsadmin/add_practice'] = array (
    'title' => 'Add New Practice',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rmsallergy_add_practice'),
    'access arguments' => array('access rmsadmin content'),
    'description' => 'Add New Practice',
    'file' => 'rmsallergy_add_practice.inc',
    'type' => MENU_NORMAL_ITEM
  );

  $items['rmsadmin/update_practice'] = array (
    'title' => 'Update Practice',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rmsallergy_update_practice'),
    'access arguments' => array('access rmsadmin content'),
    'description' => 'Update Practice',
    'file' => 'rmsallergy_update_practice.inc',
    'type' => MENU_NORMAL_ITEM
  );

  $items['add_profile'] = array (
    'title' => 'Add Allergy Test',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rmsallergy_add_profile'),
    'access arguments' => array('access rmsprimarycare content'),
    'description' => 'Add Allergy Test',
    'file' => 'rmsallergy_add_profile.inc',
    'type' => MENU_NORMAL_ITEM
  );

  $items['view_profile'] = array (
    'title' => 'View Allergy Tests',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rmsallergy_view_profile'),
    'access arguments' => array('access rmsprimarycare content'),
    'description' => 'View Allergy Test',
    'file' => 'rmsallergy_view_profile.inc',
    'type' => MENU_NORMAL_ITEM
  );

  $items['view_outgoing'] = array (
    'title' => 'View Outgoing Referrals',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rmsallergy_view_outgoing'),
    'access arguments' => array('access rmsprimarycare content'),
    'description' => 'View Outgoing Referrals',
    'file' => 'rmsallergy_view_outgoing.inc',
    'type' => MENU_NORMAL_ITEM
  );

  $items['view_incoming'] = array (
    'title' => 'View Incoming Referrals',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rmsallergy_view_incoming'),
    'access arguments' => array('access rmsspecialist content'),
    'description' => 'View Incoming Referrals',
    'file' => 'rmsallergy_view_incoming.inc',
    'type' => MENU_NORMAL_ITEM
  );

  return $items;
}

/*
function rmsallergy_form ($form, &$form_state) {
  $form['rmsallergy_max'] = array(
    '#type' => 'textfield',
    '#title' => t("Maximum number of posts"),
    '#default_value' => variable_get('rmsallergy_max', 3),
    '#size' => 2,
    '#maxlength' => 2,
    '#description' => t("The maximum number of links to display in the block"),
    '#required' => TRUE
  );
  return system_settings_form($form);
}


function rmsallergy_form_validate ( $form, &$form_state ) {
  $max_num = $form_state['values']['rmsallergy_max'];
  if ( ! ctype_digit ( $max_num ) ) {
    form_set_error ( 'rmsallergy_max',
                     t ( 'You must enter a number for the maximum number of posts to display.' ) );
  } else if ( $max_num <= 0 ) {
    form_set_error ( 'rmsallergy_max',
                     t ( 'Maximum number of posts to display must be positive.' ) );
  }
}
*/

function rmsallergy_permission () {
  return array (
    'access rmsallergy content' => array (
      'title' => t('Access content for the RMS Allergy module')
    ),
    'access rmsadmin content' => array (
      'title' => t('Access administration content for the RMS Allergy module')
    ),
    'access rmsprimarycare content' => array (
      'title' => t('Access content for primary care practices')
    ),
    'access rmsspecialist content' => array (
      'title' => t('Access content for specialist practices')
    ),
  );
}


function _rmsallergy_page () {
  $result = rmsallergy_contents ( 'page' );
  $items = array ();
  foreach ( $result as $node ) {
    $items[] = array (
      'data' => l($node->title, 'node/'.$node->nid)
    );
  }
  if ( empty ( $items ) ) {
    $page_array['rmsallergy_arguments'] = array (
      '#title' => t ( 'All posts from the last week' ),
      '#markup' => t ( 'No posts available.' )
    );
  } else {
    $page_array['rmsallergy_arguments'] = array (
      '#title' => t ( 'All posts from the last week' ),
      '#items' => $items,
      '#theme' => 'item_list__rmsallergy'
    );
  }
  return $page_array;
}

